/*
** Código hecho por Tobias Alcaraz utilizando principios de Material Design
** (https://m2.material.io/).
** Nota: componentes como el Grid y la Tipografía las reutilizo de otros
** proyectos donde ya los había escrito, sin embargo hice algunos cambios
** para que se adapten mejor a esta página (como que los Breakpoints del
** grid sean los de Bootstrap en vez de los de Material Design).
**
** TABLA DE CONTENIDOS.
** Para que sea más fácil encontrar alguna parte específica del código, acá
** estarán alistadas cada sección del CSS para su rápido descubrimiento
** utilizando CTRL + F.
**
** 1. Variables.
** 2. Estilos de elementos.
** 3. Componentes.
** 3.1. Grid.
** 3.2. Tipografía.
** 3.3. Elevación.
** 3.4. Botones.
** 3.5. Tooltips.
** 3.6. Snackbars.
** 4. Estilos generales.
** 5. Preferencias del usuario.
*/

/* 1. Variables. */
/*
** Acá defino las variables que utilizaré a lo largo de la página. Serán
** utilizadas como Design Tokens en algunos casos. O sea, que desde el :root
** de la página podrás modificar la apariencia de cualquier componente con tan
** solo modificar las variables que se encuentran ahí; de esta forma se tienen
** todas las variables para modificar en un mismo lugar en vez de tener que ir
** viendo todo el código para ir modificando lo que uno necesite.
*/
:root {
    --theme-primary: #90caf9;
    --theme-primary-variant: #5d99c6;
    --theme-secondary: #9fa8da;
    --theme-secondary-variant: #ce93d8;
    --theme-tertiary: #fff59d;
    --theme-background: #121212;
    --theme-surface: #121212;
    --theme-error: #cf6679;
    --theme-on-primary: #000;
    --theme-on-secondary: #000;
    --theme-on-background: #fff;
    --theme-on-surface: #fff;
    --theme-on-error: #000;
    --theme-dynamic-color: 255 255 255;
    --theme-dynamic-color-inverse: 0 0 0;
    --theme-primary-on-background: rgb(255 255 255 / 87%);
    --theme-primary-on-background-inverse: rgb(0 0 0 / 87%);
    --theme-secondary-on-background: rgb(255 255 255 / 60%);
    --theme-secondary-on-background-inverse: rgb(0 0 0 / 65%);
    --theme-hint-on-background: rgb(255 255 255 / 38%);
    --theme-hint-on-background-inverse: rgb(0 0 0 / 38%);
    --theme-disabled-on-background: rgb(255 255 255 / 38%);
    --theme-disabled-on-background-inverse: rgb(0 0 0 / 38%);
    --theme-icon-on-background: rgb(255 255 255 / 38%);
    --theme-icon-on-background-inverse: rgb(0 0 0 / 38%);
    --theme-border-color: rgb(255 255 255 / 12%);
    --theme-border-color-inverse: rgb(0 0 0 / 12%);
    --theme-font-base: Roboto, Noto, Arial, sans-serif;
    --theme-font-code: 'Roboto Mono', monospace;
    --elevation-0dp-box-shadow: 0 0 0 0 rgb(0 0 0 / 20%), 0 0 0 0 rgb(0 0 0 / 14%), 0 0 0 0 rgb(0 0 0 / 12%);
    --elevation-1dp-box-shadow: 0 2px 1px -1px rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 1px 3px 0 rgb(0 0 0 / 12%);
    --elevation-2dp-box-shadow: 0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);
    --elevation-3dp-box-shadow: 0 3px 3px -2px rgb(0 0 0 / 20%), 0 3px 4px 0 rgb(0 0 0 / 14%), 0 1px 8px 0 rgb(0 0 0 / 12%);
    --elevation-4dp-box-shadow: 0 2px 4px -1px rgb(0 0 0 / 20%), 0 4px 5px 0 rgb(0 0 0 / 14%), 0 1px 10px 0 rgb(0 0 0 / 12%);
    --elevation-6dp-box-shadow: 0 3px 5px -1px rgb(0 0 0 / 20%), 0 6px 10px 0 rgb(0 0 0 / 14%), 0 1px 18px 0 rgb(0 0 0 / 12%);
    --elevation-8dp-box-shadow: 0 5px 5px -3px rgb(0 0 0 / 20%), 0 8px 10px 1px rgb(0 0 0 / 14%), 0 3px 14px 2px rgb(0 0 0 / 12%);
    --elevation-12dp-box-shadow: 0 7px 8px -4px rgb(0 0 0 / 20%), 0 12px 17px 2px rgb(0 0 0 / 14%), 0 5px 22px 4px rgb(0 0 0 / 12%);
    --elevation-16dp-box-shadow: 0 8px 10px -5px rgb(0 0 0 / 20%), 0 16px 24px 2px rgb(0 0 0 / 14%), 0 6px 30px 5px rgb(0 0 0 / 12%);
    --elevation-24dp-box-shadow: 0 11px 15px -7px rgb(0 0 0 / 20%), 0 24px 38px 3px rgb(0 0 0 / 14%), 0 9px 46px 8px rgb(0 0 0 / 12%);
    --elevation-shadow-transition: 280ms cubic-bezier(.4, 0, .2, 1);
    --elevation-0dp-background-color: var(--theme-background);
    --elevation-1dp-background-color: #1e1e1e;
    --elevation-2dp-background-color: #232323;
    --elevation-3dp-background-color: #252525;
    --elevation-4dp-background-color: #272727;
    --elevation-6dp-background-color: #2c2c2c;
    --elevation-8dp-background-color: #2f2f2f;
    --elevation-12dp-background-color: #333;
    --elevation-16dp-background-color: #353535;
    --elevation-24dp-background-color: #383838;
    --motion-speed-small: 100ms;
    --motion-speed-medium-expanding: 250ms;
    --motion-speed-medium-collapsing: 200ms;
    --motion-speed-large-expanding: 300ms;
    --motion-speed-large-collapsing: 250ms;
    --motion-easing-standard: cubic-bezier(.4, 0, .2, 1);
    --motion-easing-decelerated: cubic-bezier(0, 0, .2, 1);
    --motion-easing-accelerated: cubic-bezier(.4, 0, 1, 1);
    --breakpoint-small: 576px;
    --breakpoint-medium: 768px;
    --breakpoint-large: 992px;
    --breakpoint-extra-large: 1200px;
    --breakpoint: var(--breakpoint-small);
    --grid-gutter-small: 16px;
    --grid-gutter-medium: 24px;
    --grid-gutter-large: 32px;
    --grid-gutter-extra-large: 48px;
    --grid-gutter: var(--grid-gutter-small) 0;
    --border-radius-small: .25rem;
    --border-radius-medium: .25rem;
    --border-radius-large: 1.5rem;
    --app-bar-height: 64px;
    --app-bar-dense-height: 48px;
    --mdc-plain-tooltip-container-color: #e8eaed;
    --mdc-plain-tooltip-supporting-text-color: #202124;
    --mdc-plain-tooltip-supporting-text-font: var(--theme-font-base);
    --mdc-plain-tooltip-supporting-text-size: 16px;
    --mdc-plain-tooltip-container-shape: 4px;
    --mdc-plain-tooltip-supporting-text-line-height: 16px;
    accent-color: var(--theme-secondary);
    color-scheme: dark;
    font-family: var(--theme-font-base);
}

/* 3. Estilos de elementos. */
html {
    overflow-x: hidden;
}

a {
    color: var(--theme-primary);
    text-underline-offset: .125rem;
}

a:visited {
    color: var(--theme-secondary-variant);
}

::selection {
    background-color: var(--theme-on-background);
    color: var(--theme-background);
}

hr {
    border: none;
    border-top: 1px solid var(--theme-border-color);
    margin: clamp(var(--grid-gutter-small), var(--grid-gutter), var(--grid-gutter-extra-large)) 0;
}

input,
textarea {
    caret-color: var(--theme-secondary);
}

code,
kbd,
pre,
samp {
    font-family: var(--theme-font-code);
}

code {
    background-color: rgb(var(--theme-dynamic-color) / 5%);
    border: 1px solid rgb(var(--theme-dynamic-color) / 10%);
    border-radius: .25em;
    font: 400 .875rem/1.25rem var(--theme-font-code);
    letter-spacing: .0178571429em;
    margin-right: .125em;
    padding: 0 .25em;
}

pre {
    margin: 0;
    position: relative;
}

q {
    color: var(--theme-secondary-on-background);
    display: inline-block;
    font-style: italic;
    margin: var(--grid-gutter-extra-large) 0;
    quotes: '“' '”' '‘' '’';
}

q::before {
    content: open-quote;
}

q::after {
    content: close-quote;
}

q + hr {
    margin-top: unset;
}

li {
    margin-bottom: 1em;
}

/* 3. Componentes. */
/** 3.1. Grid. **/
/***
**** Acá definimos el estado inicial de cada celda del grid, la cual va a ser
**** invisible hasta que el usuario se haya desplazado hasta ella (véase la
**** función animateOnView() en el JS). El "min-height" del Media Query
**** coincide con el rootMargin del IntersectionObserver de dicha función para
**** que las celdas del grid sean siempre visibles si el script no se ejecuta
**** debido al poco alto de pantalla.
***/
@media only screen and (min-height: 100px) {
    [will-animate] {
        --distance: 16px;
        opacity: 0;
        transform: translateY(var(--distance));
        transition: transform calc(500ms * 1.5) var(--motion-easing-standard),
                    opacity calc(235ms * 2) var(--motion-easing-standard);
    }

    [will-animate][animation-direction="left"] {
        transform: translateX(calc(var(--distance) * -1));
    }

    [will-animate][animation-direction="right"] {
        transform: translateX(var(--distance));
    }

    [will-animate][animation-direction="top"] {
        transform: translateY(calc(var(--distance) * -1));
    }

    [will-animate][animated] {
        opacity: 1;
        transform: translate(0px);
    }
}

/***
**** Iba a utilizar el grid de Bootstrap pero se personalizarlo se me hizo
**** complicado por lo que opté por utilizar un grid que hice para otro
**** proyecto. Sin embargo, voy a cambiar los Breakpoints del grid para que
**** coincidan con los de Bootstrap.
***/
.grid {
    display: grid;
    gap: var(--grid-gutter);
    grid-template-columns: repeat(12, minmax(5px, 1fr));
    max-width: 2280px;
}

main.grid.grid__padding {
    margin-top: var(--app-bar-dense-height);
}

.grid .grid__col--span-0 {
    display: none;
}

.grid :is(.grid__col--span-1,
.grid__col--span-2,
.grid__col--span-3,
.grid__col--span-4,
.grid__col--span-5,
.grid__col--span-6,
.grid__col--span-7,
.grid__col--span-8,
.grid__col--span-9,
.grid__col--span-10,
.grid__col--span-11,
.grid__col--span-12) {
    grid-column-end: span 12;
}

@media only screen and (min-width: 576px) {
    .grid .grid__col--span-1 {
        grid-column-end: span 1;
    }

    .grid .grid__col--span-2 {
        grid-column-end: span 2;
    }

    .grid .grid__col--span-3 {
        grid-column-end: span 3;
    }

    .grid .grid__col--span-4 {
        grid-column-end: span 4;
    }

    .grid .grid__col--span-5 {
        grid-column-end: span 5;
    }

    .grid .grid__col--span-6 {
        grid-column-end: span 6;
    }

    .grid .grid__col--span-7 {
        grid-column-end: span 7;
    }

    .grid .grid__col--span-8 {
        grid-column-end: span 8;
    }

    .grid .grid__col--span-9 {
        grid-column-end: span 9;
    }

    .grid .grid__col--span-10 {
        grid-column-end: span 10;
    }

    .grid .grid__col--span-11 {
        grid-column-end: span 11;
    }

    .grid .grid__col--span-12 {
        grid-column-end: span 12;
    }
}

/*** Clases de utilidad. ***/
/****
***** Alínea horizontalmente el mismo grid (requiere que su ancho máximo sea
***** inferior al 100% para que funcione).
****/
.grid.grid--align-left {
    margin-right: auto;
    margin-left: 0;
}

.grid.grid--align-right {
    margin-right: 0;
    margin-left: auto;
}

.grid.grid--align-center {
    margin: 0 auto;
}

/****
***** Alínea verticalmente las celdas del grid (requiere que la altura máxima
***** del grid sea mayor a la altura máxima de una fila para que funcione).
****/
.grid .grid__col--align-top {
    align-self: start;
}

.grid .grid__col--align-middle {
    align-self: center;
}

.grid .grid__col--align-bottom {
    align-self: end;
}

/****
***** Añade un padding igual al tamaño del espacio entre las columnas en el
***** mismo grid.
****/
/***** Todos lados. *****/
.grid.grid__padding {
    padding: var(--grid-gutter) clamp(var(--grid-gutter-small), var(--grid-gutter), var(--grid-gutter-extra-large));
}

/***** Sólo lado superior. *****/
.grid.grid__padding--top {
    padding-top: var(--grid-gutter);
}

/***** Sólo lado inferior. *****/
.grid.grid__padding--bottom {
    padding-bottom: var(--grid-gutter);
}

/***** Sólo lado izquierdo. *****/
.grid.grid__padding--left {
    padding-left: var(--grid-gutter);
}

/***** Sólo lado derecho. *****/
.grid.grid__padding--top {
    padding-top: var(--grid-gutter);
}

/***** Sólo en lados en bloque (vertical). *****/
.grid.grid__padding--block {
    padding-bottom: var(--grid-gutter);
    padding-top: var(--grid-gutter);
}

/***** Sólo en lados en línea (vertical). *****/
.grid.grid__padding--inline {
    padding-left: var(--grid-gutter);
    padding-right: var(--grid-gutter);
}

/***
**** Incrementa el espacio entre las columnas a medida que incrementa el
**** ancho de la ventana.
***/
@media only screen and (min-width: 576px) and (max-width: 767px) {
    :root {
        --grid-gutter: var(--grid-gutter-small);
        --breakpoint: var(--breakpoint-small);
    }
}

@media only screen and (min-width: 768px) and (max-width: 991px) {
    :root {
        --grid-gutter: var(--grid-gutter-medium);
        --breakpoint: var(--breakpoint-medium);
    }
}

@media only screen and (min-width: 992px) and (max-width: 1199px) {
    :root {
        --grid-gutter: var(--grid-gutter-large);
        --breakpoint: var(--breakpoint-large);
    }
}

@media only screen and (min-width: 1200px) {
    :root {
        --grid-gutter: var(--grid-gutter-extra-large);
        --breakpoint: var(--breakpoint-extra-large);
    }
}

/** 3.2. Tipografía. **/
h1 {
    margin: 0 .5em;
}

.text-headline-1,
h1 {
    color: var(--theme-on-surface);
    font: 300 4rem/1 var(--theme-font-base);
}

@media only screen and (min-width: 1200px) {
    .text-headline-1,
    h1 {
        color: var(--theme-on-surface);
        font: 300 6rem/1 var(--theme-font-base);
        letter-spacing: -.015625em;
    }

    h1 {
        margin: 0;
    }
}

.text-headline-2,
h2 {
    color: var(--theme-on-surface);
    font: 300 3rem/1 var(--theme-font-base);
    letter-spacing: -.0083333333em;
}

@media only screen and (min-width: 1200px) {
    .text-headline-2,
    h2 {
        color: var(--theme-on-surface);
        font: 300 3.75rem/1 var(--theme-font-base);
        letter-spacing: -.0083333333em;
    }
}

.text-headline-3,
h3 {
    color: var(--theme-on-surface);
    font: 400 2.5rem/2.875rem var(--theme-font-base);
}

@media only screen and (min-width: 1200px) {
    .text-headline-3,
    h3 {
        color: var(--theme-on-surface);
        font: 400 3rem/3.125rem var(--theme-font-base);
    }
}

.text-headline-4,
h4 {
    color: var(--theme-on-surface);
    font: 400 2.125rem/2.5rem var(--theme-font-base);
    letter-spacing: .0073529412em;
}

.text-headline-5,
h5 {
    color: var(--theme-on-surface);
    font: 400 1.5rem/2rem var(--theme-font-base);
}

.text-headline-6,
h6 {
    color: var(--theme-on-surface);
    font: 500 1.25rem/2rem var(--theme-font-base);
    letter-spacing: .0125em;
}

.text-subtitle-1,
dt {
    color: var(--theme-on-surface);
    font: 400 1.125rem/1.75rem var(--theme-font-base);
    letter-spacing: .009375em;
}

.text-subtitle-2 {
    color: var(--theme-on-surface);
    font: 500 .875rem/1.375rem var(--theme-font-base);
    letter-spacing: .0071428571em;
}

.text-body-1,
p {
    font: 400 1rem/1.5 var(--theme-font-secondary);
    letter-spacing: .03125em;
}

.text-body-2,
dd {
    font: 400 .875rem/1.25rem var(--theme-font-secondary);
    /* .75rem originally */
    letter-spacing: .0178571429em;
}

.text-button {
    color: var(--theme-on-surface);
    font: 500 .875rem/2.25rem var(--theme-font-secondary);
    letter-spacing: .0892857143em;
    text-transform: uppercase;
}

.text-caption,
figcaption {
    color: var(--theme-on-surface);
    font: 400 .75rem/1.25rem var(--theme-font-secondary);
    letter-spacing: .0333333333em;
}

.text-overline {
    font: 500 .75rem/2 var(--theme-font-secondary);
    letter-spacing: .1666666667em;
    text-transform: uppercase;
}

.text-footnote {
    font: 300 .75rem/1.25rem var(--theme-font-secondary);
}

.text-on-background {
    color: var(--theme-on-background);
}

.text-primary {
    color: var(--theme-primary-on-background);
}

.text-primary-inverse {
    color: var(--theme-primary-on-background-inverse);
}

.text-secondary {
    color: var(--theme-secondary-on-background);
}

.text-secondary-inverse {
    color: var(--theme-secondary-on-background-inverse);
}

.text-disabled {
    color: var(--theme-disabled-on-background);
}

.text-disabled-inverse {
    color: var(--theme-disabled-on-background-inverse);
}

/** 3.3 Elevación. **/
.elevation-z0 {
    background-color: var(--elevation-dp-background-color);
    box-shadow: var(--elevation-dp-box-shadow);
    z-index: 0;
}

.elevation-z1 {
    background-color: var(--elevation-1dp-background-color);
    box-shadow: var(--elevation-1dp-box-shadow);
    z-index: 1;
}

.elevation-z2 {
    background-color: var(--elevation-2dp-background-color);
    box-shadow: var(--elevation-2dp-box-shadow);
    z-index: 2;
}

.elevation-z3 {
    background-color: var(--elevation-3dp-background-color);
    box-shadow: var(--elevation-3dp-box-shadow);
    z-index: 3;
}

.elevation-z4 {
    background-color: var(--elevation-4dp-background-color);
    box-shadow: var(--elevation-4dp-box-shadow);
    z-index: 4;
}

.elevation-z6 {
    background-color: var(--elevation-6dp-background-color);
    box-shadow: var(--elevation-6dp-box-shadow);
    z-index: 6;
}

.elevation-z8 {
    background-color: var(--elevation-8dp-background-color);
    box-shadow: var(--elevation-8dp-box-shadow);
    z-index: 8;
}

.elevation-z12 {
    background-color: var(--elevation-12dp-background-color);
    box-shadow: var(--elevation-12dp-box-shadow);
    z-index: 12;
}

.elevation-z16 {
    background-color: var(--elevation-16dp-background-color);
    box-shadow: var(--elevation-16dp-box-shadow);
    z-index: 16;
}

.elevation-z24 {
    background-color: var(--elevation-24dp-background-color);
    box-shadow: var(--elevation-24dp-box-shadow);
    z-index: 24;
}

/** 3.4. Botones. **/
.button {
    -webkit-appearance: none;
    appearance: none;
    align-items: center;
    border: 1px solid transparent;
    border-radius: 4px;
    display: inline-flex;
    font: 500 .875rem/2.25rem var(--theme-font-secondary);
    justify-content: center;
    letter-spacing: .0892857143em;
    min-width: 64px;
    outline: none;
    overflow: hidden;
    padding: 0 15px;
    position: relative;
    text-decoration: none;
    text-transform: uppercase;
    /* @alternate */
    user-select: none;
    vertical-align: middle;
    z-index: 2;
}

.button::before {
    bottom: 0;
    content: '';
    background-color: var(--theme-primary);
    height: 100%;
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    transition: opacity 15ms;
    right: 0;
    width: 100%;
}

.button:hover::before {
    opacity: .08;
}

.button:is(:focus, :focus-within, :active)::before {
    opacity: .24;
    transition-duration: 75ms;
}

.button.primary::before {
    background-color: var(--theme-on-background);
}

.button.raised {
    background-color: var(--theme-primary);
    box-shadow: var(--elevation-2dp-box-shadow);
    color: var(--theme-on-primary);
    transition: var(--elevation-shadow-transition);
}

.button.raised:where(:hover, :focus, :focus-within) {
    box-shadow: var(--elevation-8dp-box-shadow);
    z-index: 8;
}

.button.primary {
    background-color: var(--theme-primary);
    color: var(--theme-on-primary);
}

.button.secondary {
    border-color: currentColor;
    color: var(--theme-primary);
}

.button > svg {
    margin-left: -4px;
    margin-right: 8px;
}

/** 3.5. Tooltips. **/
[tooltip-text] {
    justify-content: unset;
    outline: none;
    position: relative;
}

[tooltip-text]::after {
    border: 1px solid rgba(0 0 0 / 0%);
    background-color: var(--mdc-plain-tooltip-container-color);
    border-radius: var(--mdc-plain-tooltip-container-shape);
    box-sizing: border-box;
    color: var(--mdc-plain-tooltip-supporting-text-color);
    content: attr(tooltip-text);
    font-family: var(--mdc-plain-tooltip-supporting-text-font);
    font-size: var(--mdc-plain-tooltip-supporting-text-size);
    font-weight: var(--mdc-plain-tooltip-supporting-text-weight);
    letter-spacing: var(--mdc-plain-tooltip-supporting-text-tracking);
    line-height: var(--mdc-plain-tooltip-supporting-text-line-height);
    max-height: 40vh;
    max-width: 200px;
    min-height: 24px;
    min-width: 40px;
    opacity: 0;
    overflow: hidden;
    overflow-wrap: anywhere;
    padding: 4px 8px;
    pointer-events: none;
    position: absolute;
    transform: scale(.8) translate(var(--x, 0px), var(--y, 0px));
    transform-origin: var(--dir-x, unset) var(--dir-y);
    transition: transform 75ms cubic-bezier(.4, 0, 1, 1),
                opacity 75ms cubic-bezier(.4, 0, 1, 1);
    white-space: nowrap;
    word-break: break-all;
    word-break: var(--mdc-tooltip-word-break, normal);
    z-index: 9;
}

[tooltip-text]:is(:hover, :focus)::after {
    opacity: 1;
    transform: scale(1) translate(var(--x, 0px), var(--y, 0px));
    transition: transform 150ms cubic-bezier(0, 0, .2, 1),
                opacity 150ms cubic-bezier(0, 0, .2, 1);
}

@media screen and (forced-colors: active) {
    [tooltip-text]::after {
        border-color: CanvasText;
    }
}

[tooltip-text][tooltip-position*='top']::after {
    --y: calc(-100% - 16px);
    --dir-y: bottom;
    top: 0;
}

[tooltip-text][tooltip-position*='bottom']::after {
    --y: calc(100% + 16px);
    --dir-y: top;
    bottom: 0;
}

[tooltip-text][tooltip-position*='left']::after {
    --x: calc(-100% - 16px);
    --dir-x: right;
    left: 0;
}

[tooltip-text][tooltip-position*='right']::after {
    --x: calc(100% + 16px);
    --dir-x: left;
    right: 0;
}

[tooltip-text][tooltip-position*='v-centered']::after {
    --y: calc(-50%);
    --dir-y: center;
    top: 50%;
}

[tooltip-text][tooltip-position*='h-centered']::after {
    --x: calc(-50%);
    --dir-x: center;
    left: 50%;
}

/** 3.6. Snackbars. **/
.mdc-snackbar {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    align-items: center;
    bottom: 0;
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    left: 0;
    line-height: 2.25rem;
    margin: 8px;
    pointer-events: none;
    position: fixed;
    right: 0;
    z-index: 8;
}

.mdc-snackbar__surface {
    align-items: center;
    background-color: var(--elevation-6dp-background-color);
    border-radius: 4px;
    box-shadow: var(--elevation-6dp-box-shadow);
    box-sizing: border-box;
    display: flex;
    justify-content: flex-start;
    max-width: 672px;
    min-width: 344px;
    opacity: 0;
    transform: scale(0.8);
    z-index: 6;
}

.mdc-snackbar__label {
    box-sizing: border-box;
    color: var(--theme-primary-on-background);
    flex-grow: 1;
    font: 400 .875rem/1.25rem var(--theme-font-base);
    letter-spacing: .0178571429em;
    margin: 0;
    padding: 14px 16px;
}

@media (max-width: 480px), (max-width: 344px) {
    .mdc-snackbar__surface {
        min-width: 100%;
    }
}

.mdc-snackbar--opening,
.mdc-snackbar--open,
.mdc-snackbar--closing {
    display: flex;
}

.mdc-snackbar--leading {
    justify-content: flex-start;
}

.mdc-snackbar--stacked .mdc-snackbar__surface {
    flex-direction: column;
    align-items: flex-start;
}

.mdc-snackbar--stacked .mdc-snackbar__actions {
    align-self: flex-end;
    margin-bottom: 8px;
}

.mdc-snackbar--open .mdc-snackbar__surface {
    transform: scale(1);
    opacity: 1;
    pointer-events: auto;
    transition: opacity 150ms 0ms cubic-bezier(0, 0, .2, 1),
                transform 150ms 0ms cubic-bezier(0, 0, .2, 1);
}

.mdc-snackbar--closing .mdc-snackbar__surface {
    transform: scale(1);
    transition: opacity 75ms 0ms cubic-bezier(.4, 0, 1, 1);
}

.mdc-snackbar__actions {
    align-items: center;
    box-sizing: border-box;
    display: flex;
    flex-shrink: 0;
    margin-left: 0;
    margin-right: 8px;
}

.mdc-snackbar__action {
    background-color: transparent;
}

.mdc-snackbar__action:not(:disabled) {
    color: var(--theme-primary);
}

.mdc-snackbar__action::before {
    background-color: var(--theme-primary);
}

.mdc-snackbar__action:hover::before {
    opacity: .08;
}

.mdc-snackbar__action:focus::before {
    transition-duration: 75ms;
    opacity: .24;
}

.mdc-snackbar__dismiss {
    border-radius: 50%;
    color: var(--theme-on-background);
    outline: none;
    overflow: hidden;
    position: relative;
}

.mdc-snackbar__dismiss::before {
    background-color: var(--theme-on-background);
    bottom: 0;
    content: '';
    height: 100%;
    left: 0;
    opacity: 0;
    position: absolute;
    right: 0;
    top: 0;
    width: 100%;
}

.mdc-snackbar__dismiss:hover::before {
    opacity: .08;
}

.mdc-snackbar__dismiss:focus::before {
    transition-duration: 75ms;
    opacity: .24;
}

.mdc-snackbar__dismiss.mdc-snackbar__dismiss {
    background-color: transparent;
    border: none;
    border-radius: 50%;
    font-size: 18px;
    height: 36px;
    padding: 9px;
    width: 36px;
}

.mdc-snackbar__dismiss.mdc-snackbar__dismiss svg,
.mdc-snackbar__dismiss.mdc-snackbar__dismiss img {
    width: 18px;
    height: 18px;
}

.mdc-snackbar__action + .mdc-snackbar__dismiss {
    margin-left: 8px;
    margin-right: 0;
}

.snackbar-hero .mdc-snackbar {
    position: relative;
}

/* 4. Estilos generales. */
.visually-hidden {
    -webkit-clip-path: inset(50%) !important;
    clip: rect(1px,1px,1px,1px) !important;
    border: 0 !important;
    clip-path: inset(50%) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    white-space: nowrap !important;
    width: 1px !important;
}

.material-icons.md-18 { font-size: 18px; }
.material-icons.md-24 { font-size: 24px; }
.material-icons.md-36 { font-size: 36px; }
.material-icons.md-48 { font-size: 48px; }

.material-icons.md-dark { color: rgba(0, 0, 0, 0.54); }
.material-icons.md-dark.md-inactive { color: rgba(0, 0, 0, 0.26); }

.material-icons.md-light { color: rgba(255, 255, 255, 1); }
.material-icons.md-light.md-inactive { color: rgba(255, 255, 255, 0.3); }

.intro-container {
    align-items: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: calc(9 * var(--breakpoint) / 16 - var(--grid-gutter) * 3);
}

.intro-header {
    font-family: var(--theme-font-code);
}

.intro-header::after {
    animation: cursor-blink 1.5s step-end infinite;
    background-color: var(--theme-on-background);
    content: '';
    display: inline-block;
    height: .8em;
    opacity: 0;
    width: .5em;
}

h1:not(.intro-header) {
    margin-left: -6px;
}

@keyframes cursor-blink {
    50% {
        opacity: 1;
    }
}

pre code.hljs {
    padding-right: 5em !important;
    position: relative;
    overflow-y: hidden;
}

pre code.hljs.is-horizontal {
    padding-right: 15em !important;
    overflow: hidden;
}

pre code.hljs.has-text-wrap {
    white-space: pre-wrap;
}

pre code.hljs .hljs-comment {
    opacity: 1;
    transition: opacity 400ms;
}

pre code.hljs.hide-comments .hljs-comment {
    opacity: 0;
    transition: opacity 200ms;
}

.code-buttons-container {
    background-color: var(--elevation-6dp-background-color);
    box-shadow: var(--elevation-6dp-box-shadow);
    border-radius: 2em;
    display: flex;
    fill: currentColor;
    flex-direction: column;
    position: absolute;
    top: 1em;
    right: 1em;
    z-index: 6;
}

.is-horizontal .code-buttons-container {
    flex-direction: row;
}

.code-button {
    align-items: center;
    appearance: none;
    background-color: transparent;
    border: none;
    cursor: pointer;
    display: flex;
    justify-content: center;
    padding: .75em;
}

.code-button:first-child {
    border-radius: 50% 50% 0 0;
}

.code-button:last-child {
    border-radius: 0 0 50% 50%;
}

.code-button:not(:first-child) {
    border-top: 1px solid var(--theme-border-color);
}

.is-horizontal .code-button:first-child {
    border-radius: 50% 0 0 50%;
}

.is-horizontal .code-button:last-child {
    border-radius: 0 50% 50% 0;
}

.is-horizontal .code-button:not(:first-child) {
    border-top: none;
    border-left: 1px solid var(--theme-border-color);
}

.code-button svg {
    height: 24px;
    width: 24px;
}

/* 5. Preferencias del usuario. */
/**
*** Desactiva todas las animaciónes y movimientos si así lo tiene configurado
*** en sus preferencias del SO/navegador.
**/
@media (prefers-reduced-motion: reduce) {
    *,
    ::before,
    ::after {
        animation-delay: 0ms !important;
        animation-duration: 0ms !important;
        animation-iteration-count: 0 !important;
        background-attachment: initial !important;
        scroll-behavior: auto !important;
        transition-duration: 0s !important;
        transition-delay: 0s !important;
    }
}